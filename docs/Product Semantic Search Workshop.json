{
	"info": {
		"_postman_id": "8386d516-3401-43e7-a242-cc89fda54727",
		"name": "Product Semantic Search Workshop",
		"description": "üõçÔ∏è **Colecci√≥n COMPLETA para el Product Semantic Search Workshop v2**\n\n**‚úÖ ALINEADA con OpenAI API Practitioner Certification**\n\nEste workshop te gu√≠a desde setup b√°sico hasta un sistema completo de b√∫squeda sem√°ntica multimodal de productos.\n\nüéØ **Estructura por Rama:**\n- **Rama 1**: Initial Project - Setup multimodal b√°sico ‚úÖ\n- **Rama 2**: RAG Implementation - B√∫squeda sem√°ntica con embeddings ‚úÖ\n- **Rama 3**: Tool Calling - Herramientas inteligentes optimizadas ‚úÖ\n- **Rama 4**: Fine-tuning - Modelo especializado para intenciones comerciales ‚úÖ\n- **Rama 5**: Moderation + Production - Sistema robusto y seguro ‚úÖ\n\nüìö **Objetivo Final:**\nSistema que entiende consultas como:\n- üé§ \"Necesito algo para ejercicio en casa\" (voz)\n- üì∑ Foto de producto ‚Üí \"Encuentra similares\"\n- üí¨ \"Regalo para mi mam√°, presupuesto $100\"\n\nüîß **Variables de Entorno Requeridas:**\n- `baseUrl`: http://localhost\n- `port`: 3000\n- `OPENAI_API_KEY`: Tu API key (configurar en entorno, NO en colecci√≥n)\n\nüöÄ **Uso:**\n```bash\ngit checkout [rama-deseada]\nnpm run dev\n# Usar endpoints correspondientes a la rama\n```\n\nüí° **Optimizado para costos:** ~$0.20 total para todo el workshop",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "48656927"
	},
	"item": [
		{
			"name": "üè† Branch 1: Initial Project / Multimodal Basics",
			"item": [
				{
					"name": "Workshop Welcome - Overview",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}:{{port}}/",
							"host": [
								"{{baseUrl}}"
							],
							"port": "{{port}}",
							"path": [
								""
							]
						},
						"description": "üõçÔ∏è **Informaci√≥n del Workshop**\n\n**Disponible:** Todas las ramas (1-5)\n\n**Respuesta:**\n- Descripci√≥n del workshop completo\n- Rama actual y progreso\n- Objetivo final del sistema\n- Pr√≥ximos pasos\n\n**Uso:** Verificar en qu√© rama est√°s y entender el roadmap completo hacia un sistema de b√∫squeda sem√°ntica inteligente."
					},
					"response": []
				},
				{
					"name": "Basic Chat - Testing",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"message\": \"Hola, estoy buscando algo c√≥modo para caminar.\",\n  \"temperature\": 0.3\n}"
						},
						"url": {
							"raw": "{{baseUrl}}:{{port}}/chat",
							"host": [
								"{{baseUrl}}"
							],
							"port": "{{port}}",
							"path": [
								"chat"
							]
						},
						"description": "üí¨ **Chat B√°sico con GPT-4o**\n\n**Disponible:** Rama 1+\n\n**Body:**\n```json\n{\n  \"message\": \"Hola, quiero aprender sobre b√∫squeda sem√°ntica\",\n  \"temperature\": 0.3\n}\n```\n\n**Proceso:**\n- Usa GPT-4o para respuestas conversacionales\n- Temperature controlable para creatividad\n- Respuesta con tokens usados\n\n**Uso:** Validar configuraci√≥n b√°sica de OpenAI y comunicaci√≥n con modelos."
					},
					"response": []
				},
				{
					"name": "Speech to Text - Text response",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "audio",
									"description": "Archivo de audio (MP3, WAV, M4A, FLAC) - M√°ximo 25MB",
									"type": "file",
									"src": "/C:/Users/Dell/Desktop/freelance/INNOVAT_LATAM/LLM-BK-WS/inputs/basic/query-voice.mp3"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}:{{port}}/query-voice-to-text",
							"host": [
								"{{baseUrl}}"
							],
							"port": "{{port}}",
							"path": [
								"query-voice-to-text"
							]
						},
						"description": "üé§ **Speech to Text - Transcripci√≥n**\n\n**Disponible:** Rama 1+\n\n**Proceso:**\n1. Sube archivo de audio\n2. gpt-4o-transcribe convierte a texto\n3. Respuesta con texto transcrito\n\n**Formatos soportados:** MP3, WAV, M4A, FLAC\n**L√≠mite:** 25MB\n\n**Respuesta:**\n- text: Texto transcrito\n- confidence: Nivel de confianza\n- duration: Duraci√≥n del audio\n\n**Uso:** Base para consultas de productos por voz."
					},
					"response": []
				},
				{
					"name": "Text to Speech - Voice response",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"text\": \"Recomiendame zapatos deportivos perfectos para trotar\",\n  \"voice\": \"nova\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}:{{port}}/query-text-to-voice",
							"host": [
								"{{baseUrl}}"
							],
							"port": "{{port}}",
							"path": [
								"query-text-to-voice"
							]
						},
						"description": "üîä **Text to Speech con Estilos**\n\n**Disponible:** Rama 1+\n\n**Body:**\n```json\n{\n  \"text\": \"Te recomiendo estos auriculares...\",\n  \"style\": \"friendly customer service representative\",\n  \"voice\": \"nova\",\n  \"speed\": 1.0\n}\n```\n\n**Proceso:**\n- Usa gpt-4o-mini-tts con instrucciones de estilo\n- Voces disponibles: alloy, echo, fable, onyx, nova, shimmer\n- Estilos personalizables\n\n**Respuesta:** Archivo MP3 con audio generado\n\n**Uso:** Respuestas por voz para recomendaciones de productos."
					},
					"response": []
				},
				{
					"name": "Analyze Image - Text response",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"type": "file",
									"src": "/C:/Users/Dell/Desktop/freelance/INNOVAT_LATAM/LLM-BK-WS/inputs/basic/image.png"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}:{{port}}/analyze-image",
							"host": [
								"{{baseUrl}}"
							],
							"port": "{{port}}",
							"path": [
								"analyze-image"
							]
						},
						"description": "üì∑ **An√°lisis de Im√°genes de Productos**\n\n**Disponible:** Rama 1+\n\n**Body:**\n```json\n{\n  \"imageUrl\": \"https://example.com/product.jpg\",\n  \"analysisType\": \"product\"\n}\n```\n\n**Tipos de an√°lisis:**\n- product: Identifica categor√≠a, caracter√≠sticas, uso\n- similarity: Describe para encontrar similares\n- defects: Examina defectos o problemas\n\n**Proceso:**\n- GPT-4o analiza imagen con detail: 'high'\n- Extrae informaci√≥n relevante para b√∫squeda\n- Optimizado para productos comerciales\n\n**Uso:** Base para b√∫squeda por imagen y similitud visual."
					},
					"response": []
				},
				{
					"name": "Documentation",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}:{{port}}/docs",
							"host": [
								"{{baseUrl}}"
							],
							"port": "{{port}}",
							"path": [
								"docs"
							]
						},
						"description": "üìö **Documentaci√≥n Completa del Workshop**\n\n**Disponible:** Todas las ramas (1-5)\n\n**Respuesta:**\n- Informaci√≥n de cada rama y duraci√≥n\n- Features implementados por rama\n- Casos de uso y ejemplos\n- Roadmap hacia certificaci√≥n\n\n**Uso:** Referencia completa del workshop y planificaci√≥n de sesiones."
					},
					"response": []
				},
				{
					"name": "Features Showcase",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}:{{port}}/features",
							"host": [
								"{{baseUrl}}"
							],
							"port": "{{port}}",
							"path": [
								"features"
							]
						},
						"description": "üéØ **Showcase de Capacidades**\n\n**Disponible:** Todas las ramas (1-5)\n\n**Respuesta:**\n- Capacidades multimodales (voz, texto, imagen)\n- Inteligencia del sistema (sem√°ntica, contextual)\n- Detalles t√©cnicos (embeddings, modelos)\n- Casos de uso reales\n\n**Uso:** Entender el alcance completo del sistema que se va a construir."
					},
					"response": []
				},
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}:{{port}}/health",
							"host": [
								"{{baseUrl}}"
							],
							"port": "{{port}}",
							"path": [
								"health"
							]
						},
						"description": "‚ù§Ô∏è **Health Check del Sistema**\n\n**Disponible:** Todas las ramas (1-5)\n\n**Respuesta:**\n- status: 'healthy'\n- timestamp\n- version\n- environment\n\n**Uso:** Verificar que el servidor est√° funcionando y listo para recibir requests."
					},
					"response": []
				}
			],
			"description": "Configuraci√≥n inicial multimodal con OpenAI SDK y gpt-4o-mini.\n\n## Features disponibles:\n\n- `POST /chat` - Chat b√°sico con GPT-4o-mini\n    \n- `POST /query-voice-to-text` - Transcripci√≥n de audio (Whisper)\n    \n- `POST /query-text-to-voice` - S√≠ntesis de voz (TTS)\n    \n- `POST /analyze-image` - An√°lisis de im√°genes (GPT-4o Vision)\n    \n\n## Objetivo:\n\nEstablecer los fundamentos multimodales:\n\n- **Chat**: \"¬øQu√© productos tienes?\" ‚Üí Respuesta inteligente con GPT-4o-mini\n    \n- **Audio**: archivo.mp3 ‚Üí transcripci√≥n + mejoras sugeridas\n    \n- **Voz**: \"texto\" ‚Üí respuesta en audio espa√±ol\n    \n- **Imagen**: producto.jpg ‚Üí an√°lisis detallado de caracter√≠sticas\n    \n\n**Dataset**: Configuraci√≥n base con l√≠mites de tokens optimizados para costos"
		},
		{
			"name": "üîç Branch 2: RAG Implementation",
			"item": [
				{
					"name": "Search Products - Filters",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"query\": \"Productos de la marca Apple para trabajo profesional\",\n  \"filters\": {\n    \"brand\": \"Apple\",\n    \"minPrice\": 500,\n    \"maxPrice\": 1500\n  },\n  \"limit\": 2\n}"
						},
						"url": {
							"raw": "{{baseUrl}}:{{port}}/rag/search-by-filters",
							"host": [
								"{{baseUrl}}"
							],
							"port": "{{port}}",
							"path": [
								"rag",
								"search-by-filters"
							]
						},
						"description": "üèãÔ∏è **Ejemplo: Fitness en Espacios Peque√±os**\n\n**Disponible:** Rama 2+\n\n**Caso de uso:** B√∫squeda con restricciones:\n- Activity: \"ejercicio\"\n- Location: \"en casa\"\n- Constraint: \"sin ocupar mucho espacio\"\n- Budget: \"m√°ximo $100\"\n\n**Respuesta esperada:**\n- Productos compactos y port√°tiles\n- √ânfasis en versatilidad y almacenamiento\n- Opciones como bandas el√°sticas, colchonetas\n\n**Uso:** Probar comprensi√≥n de restricciones espaciales."
					},
					"response": []
				},
				{
					"name": "Search Products - Natural Language",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"query\": \"Busco auriculares baratos para trabajar desde casa\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}:{{port}}/rag/search-natural-language",
							"host": [
								"{{baseUrl}}"
							],
							"port": "{{port}}",
							"path": [
								"rag",
								"search-natural-language"
							]
						},
						"description": "üîç **B√∫squeda Sem√°ntica B√°sica**\n\n**Disponible:** Rama 2+\n\n**Body:**\n```json\n{\n  \"text\": \"auriculares inal√°mbricos para deporte\",\n  \"limit\": 5\n}\n```\n\n**Proceso:**\n1. Convierte consulta a embedding\n2. Calcula similitud coseno con productos\n3. Ordena por relevancia\n4. Genera respuesta natural con ProductRAGService\n\n**Respuesta:**\n- answer: Respuesta conversacional generada\n- products: Productos encontrados con similarity scores\n- tokensUsed: Tokens consumidos\n\n**Ejemplos de consultas:**\n- \"smartphone con buena c√°mara\"\n- \"algo para hacer ejercicio en casa\"\n- \"regalo para cocinar\""
					},
					"response": []
				},
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}:{{port}}/rag/health",
							"host": [
								"{{baseUrl}}"
							],
							"port": "{{port}}",
							"path": [
								"rag",
								"health"
							]
						},
						"description": "üìä **Estad√≠sticas del Vector Store**\n\n**Disponible:** Rama 2+\n\n**Respuesta:**\n- totalProducts: N√∫mero total indexado\n- categories: Categor√≠as disponibles\n- withImages: Productos con im√°genes\n- imagePercentage: % con an√°lisis visual\n- avgPrice: Precio promedio\n- indexed: Estado de indexaci√≥n\n\n**Uso:** Debug y optimizaci√≥n del sistema RAG. Verificar que la indexaci√≥n fue exitosa."
					},
					"response": []
				}
			],
			"description": "Sistema de b√∫squeda sem√°ntica con embeddings y vector store optimizado.\n\n## Features disponibles:\n\n- `POST /rag/search-by-filters` - B√∫squeda sem√°ntica de productos por filtros\n    \n- `POST /rag/search-natural-language` - B√∫squeda con procesamiento de lenguaje natural\n    \n- `GET /rag/health` - Estado del servicio RAG\n    \n\n## Objetivo:\n\nB√∫squeda inteligente de productos usando embeddings:\n\n- **\"zapatillas para correr\"** ‚Üí productos deportivos relevantes por similitud\n    \n- **\"regalo cocina mam√° $100\"** ‚Üí filtrado por categor√≠a, precio y contexto\n    \n- **\"laptop trabajo programador\"** ‚Üí scoring sem√°ntico + filtros de marca\n    \n\n**Dataset**: 42 productos across 8 categor√≠as con text-embedding-3-small"
		},
		{
			"name": "üõ†Ô∏è Branch 3: Tool Calling",
			"item": [
				{
					"name": "Tool Execute - Consulta Simple - Productos",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"message\": \"Busco laptops Apple que tengan buen procesamiento. Quiero usarla para el trabajo.\",\n  \"include_tool_details\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}:{{port}}/tools/chat",
							"host": [
								"{{baseUrl}}"
							],
							"port": "{{port}}",
							"path": [
								"tools",
								"chat"
							]
						},
						"description": "ü§ñ **Asistente con Tool Calling Autom√°tico**\n\n**Disponible:** Rama 3+\n\n**Body:**\n```json\n{\n  \"query\": \"Necesito auriculares para trabajo remoto\",\n  \"responseFormat\": \"text\"\n}\n```\n\n**Proceso:**\n1. GPT-4o-mini analiza la consulta\n2. Decide autom√°ticamente qu√© herramientas usar\n3. Ejecuta search_products con par√°metros inteligentes\n4. Genera respuesta natural con resultados\n\n**Respuesta:**\n- text: Respuesta conversacional\n- products: Productos encontrados (m√°ximo 3)\n- toolsUsed: Herramientas utilizadas\n- intent: Intenci√≥n detectada\n\n**Ventaja:** Sistema decide autom√°ticamente la mejor estrategia."
					},
					"response": []
				},
				{
					"name": "Tool Execute - Consulta Simple - P√≥liticas",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"message\": \"C√≥mo pido el reembolso de un producto que lleg√≥ defectuoso?\",\n  \"include_tool_details\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}:{{port}}/tools/chat",
							"host": [
								"{{baseUrl}}"
							],
							"port": "{{port}}",
							"path": [
								"tools",
								"chat"
							]
						},
						"description": "ü§ñ **Asistente con Tool Calling Autom√°tico**\n\n**Disponible:** Rama 3+\n\n**Body:**\n```json\n{\n  \"query\": \"Necesito auriculares para trabajo remoto\",\n  \"responseFormat\": \"text\"\n}\n```\n\n**Proceso:**\n1. GPT-4o-mini analiza la consulta\n2. Decide autom√°ticamente qu√© herramientas usar\n3. Ejecuta search_products con par√°metros inteligentes\n4. Genera respuesta natural con resultados\n\n**Respuesta:**\n- text: Respuesta conversacional\n- products: Productos encontrados (m√°ximo 3)\n- toolsUsed: Herramientas utilizadas\n- intent: Intenci√≥n detectada\n\n**Ventaja:** Sistema decide autom√°ticamente la mejor estrategia."
					},
					"response": []
				},
				{
					"name": "Tool Execute - Consulta Intermedia",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tool\": \"get_product_details\",\n  \"arguments\": {\n    \"product_ids\": [\"prod-001\"],\n    \"include_reviews\": true,\n    \"include_specifications\": true\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}:{{port}}/tools/execute",
							"host": [
								"{{baseUrl}}"
							],
							"port": "{{port}}",
							"path": [
								"tools",
								"execute"
							]
						},
						"description": "üîç **Herramienta: get_product_details**\n\n**Disponible:** Rama 3+\n\n**Argumentos:**\n- product_ids: Array de IDs de productos\n- include_reviews: Boolean (datos mock)\n- include_specifications: Boolean (datos mock)\n\n**Proceso:**\n- Extrae informaci√≥n base del vector store\n- Genera reviews convincentes (mock data)\n- A√±ade especificaciones por categor√≠a (mock)\n- SIN costo API adicional\n\n**Respuesta:**\n- products: Array con detalles completos\n  - Informaci√≥n base + reviews + specs\n  - stock_info, shipping, warranty\n\n**Uso:** Informaci√≥n detallada para decisiones de compra."
					},
					"response": []
				},
				{
					"name": "Tool Execute - Consulta Intermedia v2",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"message\": \"Compara entre dos celulares, y recomiendame uno. Sin presupuestos\",\n  \"include_tool_details\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}:{{port}}/tools/chat",
							"host": [
								"{{baseUrl}}"
							],
							"port": "{{port}}",
							"path": [
								"tools",
								"chat"
							]
						},
						"description": "üîç **Herramienta: get_product_details**\n\n**Disponible:** Rama 3+\n\n**Argumentos:**\n- product_ids: Array de IDs de productos\n- include_reviews: Boolean (datos mock)\n- include_specifications: Boolean (datos mock)\n\n**Proceso:**\n- Extrae informaci√≥n base del vector store\n- Genera reviews convincentes (mock data)\n- A√±ade especificaciones por categor√≠a (mock)\n- SIN costo API adicional\n\n**Respuesta:**\n- products: Array con detalles completos\n  - Informaci√≥n base + reviews + specs\n  - stock_info, shipping, warranty\n\n**Uso:** Informaci√≥n detallada para decisiones de compra."
					},
					"response": []
				},
				{
					"name": "Tool Execute - Consulta Avanzada",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"message\": \"Recomienda el mejor celular que tengas, y dame las politicas de reembolso en caso de da√±os o incorrecto funcionamiento del dispositivo\",\n  \"include_tool_details\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}:{{port}}/tools/chat",
							"host": [
								"{{baseUrl}}"
							],
							"port": "{{port}}",
							"path": [
								"tools",
								"chat"
							]
						},
						"description": "üîç **Herramienta: get_product_details**\n\n**Disponible:** Rama 3+\n\n**Argumentos:**\n- product_ids: Array de IDs de productos\n- include_reviews: Boolean (datos mock)\n- include_specifications: Boolean (datos mock)\n\n**Proceso:**\n- Extrae informaci√≥n base del vector store\n- Genera reviews convincentes (mock data)\n- A√±ade especificaciones por categor√≠a (mock)\n- SIN costo API adicional\n\n**Respuesta:**\n- products: Array con detalles completos\n  - Informaci√≥n base + reviews + specs\n  - stock_info, shipping, warranty\n\n**Uso:** Informaci√≥n detallada para decisiones de compra."
					},
					"response": []
				},
				{
					"name": "Available Tools - Lista de Herramientas",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}:{{port}}/tools/available",
							"host": [
								"{{baseUrl}}"
							],
							"port": "{{port}}",
							"path": [
								"tools",
								"available"
							]
						},
						"description": "üìã **Lista de Herramientas Disponibles**\n\n**Disponible:** Rama 3+\n\n**Respuesta:**\n- tools: Array con definici√≥n de cada herramienta\n  - name, description, parameters\n  - Esquemas JSON completos\n- total_tools: 3 herramientas optimizadas\n- cost_optimization: Detalles de optimizaci√≥n\n\n**Herramientas incluidas:**\n1. search_products - B√∫squeda inteligente\n2. compare_products - Comparaci√≥n estructurada  \n3. get_product_details - Informaci√≥n detallada\n\n**Uso:** Referencia para desarrolladores sobre capacidades disponibles."
					},
					"response": []
				},
				{
					"name": "Status del servicio",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}:{{port}}/tools//health",
							"host": [
								"{{baseUrl}}"
							],
							"port": "{{port}}",
							"path": [
								"tools",
								"",
								"health"
							]
						},
						"description": "üìã **Lista de Herramientas Disponibles**\n\n**Disponible:** Rama 3+\n\n**Respuesta:**\n- tools: Array con definici√≥n de cada herramienta\n  - name, description, parameters\n  - Esquemas JSON completos\n- total_tools: 3 herramientas optimizadas\n- cost_optimization: Detalles de optimizaci√≥n\n\n**Herramientas incluidas:**\n1. search_products - B√∫squeda inteligente\n2. compare_products - Comparaci√≥n estructurada  \n3. get_product_details - Informaci√≥n detallada\n\n**Uso:** Referencia para desarrolladores sobre capacidades disponibles."
					},
					"response": []
				}
			],
			"description": "Conversaciones inteligentes con selecci√≥n autom√°tica de herramientas.\n\n## Features disponibles:\n\n- `POST /tools/chat` - IA conversacional con herramientas autom√°ticas\n    \n- `GET /tools/available` - Lista de herramientas disponibles\n    \n- `GET /tools/health` - Estado del sistema de herramientas\n    \n\n## Objetivo:\n\nAutomatizar acciones basadas en intenci√≥n del usuario:\n\n- **\"Compara iPhone vs Samsung\"** ‚Üí `compare_products()` autom√°tico\n    \n- **\"Busco algo para ejercicio\"** ‚Üí `search_products(fitness)` + recomendaciones\n    \n- **\"Detalles del MacBook\"** ‚Üí `get_product_details()` + an√°lisis completo\n    \n\n**Dataset**: 3 herramientas especializadas con preservaci√≥n de contexto"
		},
		{
			"name": "üéØ Branch 4: Fine-tuning",
			"item": [
				{
					"name": "Get Models",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"model\": \"gpt-4o-mini\",\n  \"dataset_size\": 500,\n  \"epochs\": 3\n}"
						},
						"url": {
							"raw": "{{baseUrl}}:{{port}}/fine-tuning/models",
							"host": [
								"{{baseUrl}}"
							],
							"port": "{{port}}",
							"path": [
								"fine-tuning",
								"models"
							]
						},
						"description": "üöÄ **Iniciar Job de Fine-tuning**\n\n**Disponible:** Rama 4+\n\n**Body:**\n```json\n{\n  \"model\": \"gpt-4o-mini\",\n  \"dataset_size\": 500,\n  \"epochs\": 3\n}\n```\n\n**Proceso:**\n1. Genera dataset JSONL con ejemplos de intenciones\n2. Sube archivo a OpenAI\n3. Crea fine-tuning job\n4. Configuraci√≥n optimizada para comercio\n\n**Respuesta:**\n- message: \"Fine-tuning iniciado\"\n- job_id: ID del job para seguimiento\n- estimated_time: \"10-20 minutos\"\n\n**Costo aproximado:** ~$3-5 por entrenamiento\n\n**Uso:** Especializar modelo para entender intenciones comerciales."
					},
					"response": []
				},
				{
					"name": "Extract filters - Modelo Base",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"query\": \"busco laptop gaming barata marca Apple entre $15-$500\",\n  \"modelId\": \"gpt-4o-mini-2024-07-18\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}:{{port}}/fine-tuning/extract-filters",
							"host": [
								"{{baseUrl}}"
							],
							"port": "{{port}}",
							"path": [
								"fine-tuning",
								"extract-filters"
							]
						},
						"description": "üéØ **An√°lisis de Intenci√≥n - Modelo Base**\n\n**Disponible:** Rama 4+\n\n**Body:**\n```json\n{\n  \"query\": \"Algo para ejercicio en departamento peque√±o\",\n  \"model\": \"base\"\n}\n```\n\n**Proceso:**\n- Usa gpt-4o-mini base (sin fine-tuning)\n- Intenta extraer intenci√≥n en formato libre\n- Sin estructura espec√≠fica para comercio\n\n**Respuesta:**\n- query: Consulta analizada\n- intent: Intenci√≥n detectada (no estructurada)\n- model_used: \"base\"\n\n**Uso:** Baseline para comparar con modelo fine-tuned."
					},
					"response": []
				},
				{
					"name": "Extract filters - Modelo Fine-tuned",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"query\": \"busco laptop gaming barata marca Apple entre $15-$500\",\n  \"modelId\": \"ft:gpt-4o-mini-2024-07-18:personal:product-filter-extractor:CLcfRsmb\",\n  \"note\": \"Replace abc123 with actual fine-tuned model ID from npm run fine-tuning:status\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}:{{port}}/fine-tuning/extract-filters",
							"host": [
								"{{baseUrl}}"
							],
							"port": "{{port}}",
							"path": [
								"fine-tuning",
								"extract-filters"
							]
						},
						"description": "üéØ **An√°lisis de Intenci√≥n - Modelo Fine-tuned**\n\n**Disponible:** Rama 4+ (requiere fine-tuning completado)\n\n**Body:**\n```json\n{\n  \"query\": \"Regalo para mi mam√° cocinera\",\n  \"model\": \"fine-tuned\"\n}\n```\n\n**Proceso:**\n- Usa modelo especializado ft:gpt-4o-mini:...\n- Extrae intenci√≥n en formato estructurado\n- Optimizado para intenciones comerciales\n\n**Respuesta estructurada:**\n- intent: \"gift-purchase\"\n- categories: [\"kitchen\", \"cookware\"]\n- features: [\"practical\", \"quality\", \"giftable\"]\n- recipient: \"mother\"\n- budget: tipo y rango\n\n**Uso:** Intenciones estructuradas para mejor tool calling."
					},
					"response": []
				},
				{
					"name": "Compare Fine-tuned vs Foundation model",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"query\": \"busco laptop gaming barata marca Apple entre $15-$500\",\n  \"fineTunedModelId\": \"ft:gpt-4o-mini-2024-07-18:personal:product-filter-extractor:CLcfRsmb\",\n  \"note\": \"Replace abc123 with actual fine-tuned model ID from npm run fine-tuning:status\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}:{{port}}/fine-tuning/compare-models",
							"host": [
								"{{baseUrl}}"
							],
							"port": "{{port}}",
							"path": [
								"fine-tuning",
								"compare-models"
							]
						},
						"description": "‚öñÔ∏è **Comparar Modelos Base vs Fine-tuned**\n\n**Disponible:** Rama 4+ (requiere fine-tuning completado)\n\n**Body:**\n```json\n{\n  \"testQueries\": [\n    \"Auriculares para trabajo remoto\",\n    \"Algo elegante pero econ√≥mico para oficina\",\n    \"Juguete para ni√±o de 10 a√±os\"\n  ]\n}\n```\n\n**Proceso:**\n1. Analiza cada query con modelo base\n2. Analiza cada query con modelo fine-tuned\n3. Compara estructuraci√≥n y precisi√≥n\n4. Calcula m√©tricas de mejora\n\n**Respuesta:**\n- results: Array con comparaci√≥n por query\n  - base_model: Respuesta del modelo base\n  - fine_tuned: Respuesta estructurada\n  - improvement: M√©tricas de mejora\n\n**Uso:** Validar efectividad del fine-tuning."
					},
					"response": []
				},
				{
					"name": "Status del servicio",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}:{{port}}/fine-tuning/health",
							"host": [
								"{{baseUrl}}"
							],
							"port": "{{port}}",
							"path": [
								"fine-tuning",
								"health"
							]
						},
						"description": "üìà **M√©tricas de Entrenamiento**\n\n**Disponible:** Rama 4+\n\n**Respuesta:**\n- training_loss: P√©rdida durante entrenamiento\n- validation_loss: P√©rdida en validaci√≥n\n- epochs_completed: √âpocas completadas\n- tokens_processed: Tokens procesados\n- model_performance: M√©tricas de rendimiento\n\n**M√©tricas incluidas:**\n- Precisi√≥n en extracci√≥n de intenciones\n- Consistencia en formato estructurado\n- Mejora vs modelo base\n\n**Uso:** Evaluar calidad del modelo fine-tuned y optimizar futuros entrenamientos."
					},
					"response": []
				}
			],
			"description": "Modelo especializado para comprensi√≥n de intenciones comerciales usando gpt-4o-mini.\n\n## Features disponibles:\n\n- `POST /fine-tuning/classify-intent` - Clasificaci√≥n de intenciones (base vs fine-tuned)\n    \n- `GET /fine-tuning/models` - Modelos disponibles y m√©tricas de rendimiento\n    \n- `POST /fine-tuning/smart-recommend` - Workflow integrado completo\n    \n- `GET /fine-tuning/health` - Estado del servicio de fine-tuning\n    \n\n## Objetivo:\n\nMejorar comprensi√≥n de intenciones con modelo especializado:\n\n- **\"Regalo para mi mam√° cocinera, $150\"** ‚Üí `INTENT: gift, RECIPIENT: mother, BUDGET: 150, CATEGORY: kitchen`\n    \n- **\"Necesito laptop trabajo\"** ‚Üí `INTENT: business, CATEGORY: electronics, FEATURES: performance`\n    \n- **\"Algo para ejercicio casa\"** ‚Üí `INTENT: personal, CATEGORY: sports, CONSTRAINT: home`\n    \n\n**Dataset**: 400+ ejemplos de intenciones comerciales estructuradas con 100% accuracy"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Set dynamic variables for product search workshop",
					"pm.environment.set('timestamp', new Date().toISOString());",
					"pm.environment.set('requestId', pm.variables.replaceIn('{{$randomUUID}}'));",
					"console.log('üõçÔ∏è Product Search Workshop - Request initiated at', pm.environment.get('timestamp'));"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Enhanced response validation for product search workshop",
					"pm.test('Status code is successful', function () {",
					"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
					"});",
					"",
					"pm.test('Response time is reasonable', function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(15000); // 15s for AI responses",
					"});",
					"",
					"pm.test('Content-Type is appropriate', function () {",
					"    const contentType = pm.response.headers.get('Content-Type');",
					"    pm.expect(contentType).to.satisfy(function(ct) {",
					"        return ct.includes('application/json') || ct.includes('audio/mpeg');",
					"    });",
					"});",
					"",
					"// Specific tests for product search responses",
					"if (pm.response.headers.get('Content-Type').includes('application/json')) {",
					"    pm.test('Response has expected structure', function () {",
					"        const jsonData = pm.response.json();",
					"        ",
					"        // For search endpoints",
					"        if (pm.request.url.toString().includes('/search')) {",
					"            pm.expect(jsonData).to.have.property('answer');",
					"            pm.expect(jsonData).to.have.property('products');",
					"        }",
					"        ",
					"        // For assistant endpoints",
					"        if (pm.request.url.toString().includes('/assistant')) {",
					"            pm.expect(jsonData).to.have.property('text');",
					"        }",
					"        ",
					"        // For tool execution",
					"        if (pm.request.url.toString().includes('/tools')) {",
					"            pm.expect(jsonData).to.be.an('object');",
					"        }",
					"    });",
					"",
					"    // Log interesting data for debugging",
					"    const jsonData = pm.response.json();",
					"    if (jsonData.products && jsonData.products.length > 0) {",
					"        console.log(`Found ${jsonData.products.length} products`);",
					"    }",
					"    if (jsonData.toolsUsed) {",
					"        console.log('Tools used:', jsonData.toolsUsed);",
					"    }",
					"    if (jsonData.tokensUsed) {",
					"        console.log('Tokens used:', jsonData.tokensUsed);",
					"    }",
					"}",
					"",
					"// Log response for debugging",
					"console.log('üìä Response Status:', pm.response.code);",
					"console.log('‚è±Ô∏è Response Time:', pm.response.responseTime + 'ms');"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost",
			"type": "string"
		},
		{
			"key": "port",
			"value": "3000",
			"type": "string"
		}
	]
}